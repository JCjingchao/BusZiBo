package com.szxb.buspay.db.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.szxb.buspay.entity.BlackListCard;
import com.szxb.buspay.entity.BlackListEntity;
import com.szxb.buspay.entity.CardPayEntity;
import com.szxb.buspay.entity.CardRecord;
import com.szxb.buspay.entity.LineEntity;
import com.szxb.buspay.entity.MacKeyEntity;
import com.szxb.buspay.entity.OnLineInfo;
import com.szxb.buspay.entity.PublicKeyEntity;
import com.szxb.buspay.entity.ScanEntity;
import com.szxb.buspay.entity.ScanInfoEntity;
import com.szxb.buspay.entity.SwipeCardEntity;

import com.szxb.buspay.db.dao.BlackListCardDao;
import com.szxb.buspay.db.dao.BlackListEntityDao;
import com.szxb.buspay.db.dao.CardPayEntityDao;
import com.szxb.buspay.db.dao.CardRecordDao;
import com.szxb.buspay.db.dao.LineEntityDao;
import com.szxb.buspay.db.dao.MacKeyEntityDao;
import com.szxb.buspay.db.dao.OnLineInfoDao;
import com.szxb.buspay.db.dao.PublicKeyEntityDao;
import com.szxb.buspay.db.dao.ScanEntityDao;
import com.szxb.buspay.db.dao.ScanInfoEntityDao;
import com.szxb.buspay.db.dao.SwipeCardEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig blackListCardDaoConfig;
    private final DaoConfig blackListEntityDaoConfig;
    private final DaoConfig cardPayEntityDaoConfig;
    private final DaoConfig cardRecordDaoConfig;
    private final DaoConfig lineEntityDaoConfig;
    private final DaoConfig macKeyEntityDaoConfig;
    private final DaoConfig onLineInfoDaoConfig;
    private final DaoConfig publicKeyEntityDaoConfig;
    private final DaoConfig scanEntityDaoConfig;
    private final DaoConfig scanInfoEntityDaoConfig;
    private final DaoConfig swipeCardEntityDaoConfig;

    private final BlackListCardDao blackListCardDao;
    private final BlackListEntityDao blackListEntityDao;
    private final CardPayEntityDao cardPayEntityDao;
    private final CardRecordDao cardRecordDao;
    private final LineEntityDao lineEntityDao;
    private final MacKeyEntityDao macKeyEntityDao;
    private final OnLineInfoDao onLineInfoDao;
    private final PublicKeyEntityDao publicKeyEntityDao;
    private final ScanEntityDao scanEntityDao;
    private final ScanInfoEntityDao scanInfoEntityDao;
    private final SwipeCardEntityDao swipeCardEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        blackListCardDaoConfig = daoConfigMap.get(BlackListCardDao.class).clone();
        blackListCardDaoConfig.initIdentityScope(type);

        blackListEntityDaoConfig = daoConfigMap.get(BlackListEntityDao.class).clone();
        blackListEntityDaoConfig.initIdentityScope(type);

        cardPayEntityDaoConfig = daoConfigMap.get(CardPayEntityDao.class).clone();
        cardPayEntityDaoConfig.initIdentityScope(type);

        cardRecordDaoConfig = daoConfigMap.get(CardRecordDao.class).clone();
        cardRecordDaoConfig.initIdentityScope(type);

        lineEntityDaoConfig = daoConfigMap.get(LineEntityDao.class).clone();
        lineEntityDaoConfig.initIdentityScope(type);

        macKeyEntityDaoConfig = daoConfigMap.get(MacKeyEntityDao.class).clone();
        macKeyEntityDaoConfig.initIdentityScope(type);

        onLineInfoDaoConfig = daoConfigMap.get(OnLineInfoDao.class).clone();
        onLineInfoDaoConfig.initIdentityScope(type);

        publicKeyEntityDaoConfig = daoConfigMap.get(PublicKeyEntityDao.class).clone();
        publicKeyEntityDaoConfig.initIdentityScope(type);

        scanEntityDaoConfig = daoConfigMap.get(ScanEntityDao.class).clone();
        scanEntityDaoConfig.initIdentityScope(type);

        scanInfoEntityDaoConfig = daoConfigMap.get(ScanInfoEntityDao.class).clone();
        scanInfoEntityDaoConfig.initIdentityScope(type);

        swipeCardEntityDaoConfig = daoConfigMap.get(SwipeCardEntityDao.class).clone();
        swipeCardEntityDaoConfig.initIdentityScope(type);

        blackListCardDao = new BlackListCardDao(blackListCardDaoConfig, this);
        blackListEntityDao = new BlackListEntityDao(blackListEntityDaoConfig, this);
        cardPayEntityDao = new CardPayEntityDao(cardPayEntityDaoConfig, this);
        cardRecordDao = new CardRecordDao(cardRecordDaoConfig, this);
        lineEntityDao = new LineEntityDao(lineEntityDaoConfig, this);
        macKeyEntityDao = new MacKeyEntityDao(macKeyEntityDaoConfig, this);
        onLineInfoDao = new OnLineInfoDao(onLineInfoDaoConfig, this);
        publicKeyEntityDao = new PublicKeyEntityDao(publicKeyEntityDaoConfig, this);
        scanEntityDao = new ScanEntityDao(scanEntityDaoConfig, this);
        scanInfoEntityDao = new ScanInfoEntityDao(scanInfoEntityDaoConfig, this);
        swipeCardEntityDao = new SwipeCardEntityDao(swipeCardEntityDaoConfig, this);

        registerDao(BlackListCard.class, blackListCardDao);
        registerDao(BlackListEntity.class, blackListEntityDao);
        registerDao(CardPayEntity.class, cardPayEntityDao);
        registerDao(CardRecord.class, cardRecordDao);
        registerDao(LineEntity.class, lineEntityDao);
        registerDao(MacKeyEntity.class, macKeyEntityDao);
        registerDao(OnLineInfo.class, onLineInfoDao);
        registerDao(PublicKeyEntity.class, publicKeyEntityDao);
        registerDao(ScanEntity.class, scanEntityDao);
        registerDao(ScanInfoEntity.class, scanInfoEntityDao);
        registerDao(SwipeCardEntity.class, swipeCardEntityDao);
    }
    
    public void clear() {
        blackListCardDaoConfig.clearIdentityScope();
        blackListEntityDaoConfig.clearIdentityScope();
        cardPayEntityDaoConfig.clearIdentityScope();
        cardRecordDaoConfig.clearIdentityScope();
        lineEntityDaoConfig.clearIdentityScope();
        macKeyEntityDaoConfig.clearIdentityScope();
        onLineInfoDaoConfig.clearIdentityScope();
        publicKeyEntityDaoConfig.clearIdentityScope();
        scanEntityDaoConfig.clearIdentityScope();
        scanInfoEntityDaoConfig.clearIdentityScope();
        swipeCardEntityDaoConfig.clearIdentityScope();
    }

    public BlackListCardDao getBlackListCardDao() {
        return blackListCardDao;
    }

    public BlackListEntityDao getBlackListEntityDao() {
        return blackListEntityDao;
    }

    public CardPayEntityDao getCardPayEntityDao() {
        return cardPayEntityDao;
    }

    public CardRecordDao getCardRecordDao() {
        return cardRecordDao;
    }

    public LineEntityDao getLineEntityDao() {
        return lineEntityDao;
    }

    public MacKeyEntityDao getMacKeyEntityDao() {
        return macKeyEntityDao;
    }

    public OnLineInfoDao getOnLineInfoDao() {
        return onLineInfoDao;
    }

    public PublicKeyEntityDao getPublicKeyEntityDao() {
        return publicKeyEntityDao;
    }

    public ScanEntityDao getScanEntityDao() {
        return scanEntityDao;
    }

    public ScanInfoEntityDao getScanInfoEntityDao() {
        return scanInfoEntityDao;
    }

    public SwipeCardEntityDao getSwipeCardEntityDao() {
        return swipeCardEntityDao;
    }

}
